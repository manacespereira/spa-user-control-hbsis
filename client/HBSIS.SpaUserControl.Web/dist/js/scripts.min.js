!function(){"use strict";angular.module("spaHbsisApp",["ngRoute","LocalStorageModule","ui.utils.masks","angular-loading-bar"]).config(["$httpProvider",function(e){e.interceptors.push("authInterceptorService")}]).run(["authService",function(e){e.fillAuthData()}])}(),function(){"use strict";angular.module("spaHbsisApp").config(["$routeProvider","$locationProvider",function(e,t){t.html5Mode(!0),e.when("/home",{controller:"homeController",templateUrl:"./views/home.html"}),e.when("/newClient",{controller:"homeController",templateUrl:"./views/formClient.html"}),e.when("/editClient/:id",{controller:"homeController",templateUrl:"./views/formClient.html"}),e.when("/login",{controller:"loginController",templateUrl:"./views/login.html"}),e.when("/tokens",{controller:"tokensManagerController",templateUrl:"./views/tokens.html"}),e.otherwise({redirectTo:"/home"})}])}(),function(){"use strict";angular.module("spaHbsisApp").constant("baseConfig",{apiUrl:"http://localhost:62192/api/v1/",baseUrl:"/"})}(),function(){"use strict";function e(e,t,n,o){var r=o.apiUrl.replace("api/v1/",""),s={},i={isAuth:!1,userName:"",useRefreshTokens:!1},a=function(t){return u(),e.post(r+"account/register",t).then(function(e){return e})},c=function(s){var a="grant_type=password&username="+s.userName+"&password="+s.password;s.useRefreshTokens&&(a=a+"&client_id="+o.clientId);var c=t.defer();return e.post(r+"authtoken",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){s.useRefreshTokens?n.set("authorizationData",{token:e.data.access_token,userName:s.userName,refreshToken:e.data.refresh_token,useRefreshTokens:!0}):n.set("authorizationData",{token:e.data.access_token,userName:s.userName,refreshToken:"",useRefreshTokens:!1}),i.isAuth=!0,i.userName=s.userName,i.useRefreshTokens=s.useRefreshTokens,c.resolve(e)},function(e,t){u(),c.reject(e)}),c.promise},u=function(){n.remove("authorizationData"),i.isAuth=!1,i.userName="",i.useRefreshTokens=!1},l=function(){var e=n.get("authorizationData");e&&(i.isAuth=!0,i.userName=e.userName,i.useRefreshTokens=e.useRefreshTokens)},f=function(){var s=t.defer(),i=n.get("authorizationData");if(i&&i.useRefreshTokens){var a="grant_type=refresh_token&refresh_token="+i.refreshToken+"&client_id="+o.clientId;n.remove("authorizationData"),e.post(r+"authtoken",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){n.set("authorizationData",{token:e.access_token,userName:e.userName,refreshToken:e.refresh_token,useRefreshTokens:!0}),s.resolve(e)}).error(function(e,t){u(),s.reject(e)})}return s.promise};return s.saveRegistration=a,s.login=c,s.logOut=u,s.fillAuthData=l,s.authentication=i,s.refreshToken=f,s}e.$inject=["$http","$q","localStorageService","baseConfig"],angular.module("spaHbsisApp").factory("authService",e),e.inject=["$http, $q, localStorageService, baseConfig"]}(),function(){"use strict";angular.module("spaHbsisApp").factory("authInterceptorService",["$q","$injector","$location","localStorageService","baseConfig",function(e,t,n,o,r){return{request:function(e){e.headers=e.headers||{};var t=o.get("authorizationData");return t&&e.url.includes(r.apiUrl)&&(e.headers.Authorization="Bearer "+t.token),e},responseError:function(r){if(401===r.status){var s=t.get("authService"),i=o.get("authorizationData");if(i&&i.useRefreshTokens)return n.path("/refresh"),e.reject(r);s.logOut(),n.path("/login")}return e.reject(r)}}}])}(),function(){"use strict";function e(e,t){function n(t){return e.get(i+t)}function o(){return e.get(i)}function r(t){return t.id?e.put(i,t):e.post(i,t)}function s(t){return console.log(t),e.delete(i+t.id)}var i=t.apiUrl+"clients/";return{get:n,getAll:o,save:r,delete:s}}e.$inject=["$http","baseConfig"],angular.module("spaHbsisApp").factory("clientService",e),e.inject=["$http, baseConfig"]}(),function(){"use strict";angular.module("spaHbsisApp").factory("tokensManagerService",["$http","baseConfig",function(e,t){var n=t.apiUrl,o={},r=function(){return e.get(n+"api/refreshtokens").then(function(e){return e})},s=function(t){return e.delete(n+"api/refreshtokens/?tokenid="+t).then(function(e){return e})};return o.deleteRefreshTokens=s,o.getRefreshTokens=r,o}])}(),function(){"use strict";function e(e,t,n,o){function r(){e.message=""}function s(t){o.get(t).then(function(t){e.client=t.data},function(e){console.log(e)})}function i(){o.getAll().then(function(t){console.log(t),e.clientList=t.data},function(e){console.log(e)})}function a(t){o.save(t).then(function(t){e.savedSuccessfully=!0,e.message="Cliente salvo com sucesso!",u||(e.client={},e.clientForm.$setPristine())},function(t){e.savedSuccessfully=!1,e.message="Ops! Não conseguimos salvar este cliente! Verifique as informações e tente novamente."})}function c(t){o.delete(t).then(function(t){e.savedSuccessfully=!0,e.message="Cliente deletado com sucesso!",i()},function(){e.savedSuccessfully=!1,e.message="Ops! Não conseguimos deletar o cliente."})}e.message="";var u=n&&n.id;u?s(n.id):i(),e.saveClient=a,e.deleteClient=c,e.clearMessage=r,e.getClient=s,e.getClients=i}e.$inject=["$scope","$location","$routeParams","clientService"],angular.module("spaHbsisApp").controller("homeController",e),e.inject=["$scope, $location, $routeParams, clientService"]}(),function(){"use strict";function e(e,t,n){e.logOut=function(){n.logOut(),t.path("/home")},e.authentication=n.authentication}e.$inject=["$scope","$location","authService"],angular.module("spaHbsisApp").controller("indexController",e),e.inject=["$scope, $location, authService"]}(),function(){"use strict";function e(e,t,n,o){e.loginData={userName:"",password:"",useRefreshTokens:!1},e.message="",e.login=function(){n.login(e.loginData).then(function(e){t.path("/home")},function(t){e.message=t.error_description})}}e.$inject=["$scope","$location","authService","baseConfig"],angular.module("spaHbsisApp").controller("loginController",e),e.inject=["$scope, $location, authService, baseConfig"]}(),function(){"use strict";function e(e,t,n){e.authentication=n.authentication,e.tokenRefreshed=!1,e.tokenResponse=null,e.refreshToken=function(){n.refreshToken().then(function(t){e.tokenRefreshed=!0,e.tokenResponse=t},function(e){t.path("/login")})}}e.$inject=["$scope","$location","authService"],angular.module("spaHbsisApp").controller("refreshController",e),e.inject=["$scope, $location, authService"]}(),function(){"use strict";function e(e,t,n,o){e.savedSuccessfully=!1,e.message="",e.registration={userName:"",password:"",confirmPassword:""},e.signUp=function(){o.saveRegistration(e.registration).then(function(t){e.savedSuccessfully=!0,e.message="Usuário registrado com sucesso. Você será redirecionado em 2 segundos.",r()},function(t){var n=[];for(var o in t.data.modelState)for(var r=0;r<t.data.modelState[o].length;r++)n.push(t.data.modelState[o][r]);e.message="Erro ao registrar usuário:"+n.join(" ")})};var r=function(){var e=n(function(){n.cancel(e),t.path("/login")},2e3)}}e.$inject=["$scope","$location","$timeout","authService"],angular.module("spaHbsisApp").controller("signupController",e),e.inject=["$scope, $location, $timeout, authService"]}(),function(){"use strict";function e(){$scope.refreshTokens=[],tokensManagerService.getRefreshTokens().then(function(e){$scope.refreshTokens=e.data},function(e){console.log(e.data.message)}),$scope.deleteRefreshTokens=function(e,t){t=window.encodeURIComponent(t),tokensManagerService.deleteRefreshTokens(t).then(function(t){$scope.refreshTokens.splice(e,1)},function(e){alert(e.data.message)})}}angular.module("spaHbsisApp").controller("tokensManagerController",e),e.inject=["$scope, tokensManagerService"]}(),function(){"use strict";function e(e){function t(t,n,o){var r=e("priceCallFormatter"),s=r(t.price);if("Nada!"==s||"-"==s)return n[0].innerHTML='<span class="big-letters-price">'+s+"</span>";var i=s.split(" "),a=i[0],c=i[1].split(",");n[0].innerHTML='<span class="small-letters-price">'+a+'</span><span class="big-letters-price">'+c[0]+'</span><span class="small-letters-price">, '+c[1]+"</span>"}return{restrict:"E",link:t,scope:{price:"="}}}e.$inject=["$filter"],angular.module("spaHbsisApp").directive("lettering",e),e.inject=["$filter"]}();